# base: micro-frontends
# graphviz like?
style micro-frontends {
  node ""
}

# 框框图
# frame
business {
    frame "frontend" {
        frame "customer relation" {
            frame "";
        };
    }

    frame "channel" {
        frames "", "", "", "";
# or markdown table ?
        frames = | | |  | |
    }
}

# 应用全景图
# landscape
# ascii-doctor?


# 系统架构图
# Graphviz like ?

# 包内分层
# D3.js?

architecture {

}

system {
    Role {}
    subsystem { }
}

feature {
    ...
}

thread {
    ...
}

# π-ADL
component {
    port [incoming | outgoing] (connection )
    in
    out
    ...
   subcomponent ...
}

# meta type or type?
meta type MyMetaType1 {
  tag creator, description: text;
  tag cost, version: number;
  tag edited*: date;
}


# diagram { }
# object_diagram | feature_diagram | class_diagram
diagram object ObjectA {

}

diagram feature AccountManager {

}

diagram class Account {

}

# aka
task task1 { }
connect(task1, task2);

# kafka
event event1 { }
connect(event1, event2);

# to graphviz ?
# in-text
layer = {
   "UI",
   "Logic",
   "Storage"
}

# in-graphic with ascii-doctor?
layer = """
|-------------------------|
| UI                      |
|----------|              |
|  Logic   |              |
|-------------------------|
|  Infrastructure         |
|                         |
|  [storage]  [redis]     |
|                         |
|-------------------------|
""";

# comments ?
attachments {
  attachment { }
  attachment { }
}

# or

attachment "/hello.att";
