// Blog extend Displayable
concept Blog(Displayable, Ownable) {
    struct {
        title, slug, description, gen_description, content, featured_image: String;
        id, user_id, site_id: Integer;
        created, updated: datetime;
    }
    behavior {
        get_absolute_url(): String;
        validate_unique();
        publish_date_since(): datetime;
        published(): Integer;
        save(Blog);
        delete(id: Integer);
    }
}

// docs: thinking in behavior out
behavior for Blog {
  delete(id: Integer);
}

struct for Blog {
  title: String;
}

// simple type-system?
type Description {

}
// type alias
type Behavior = Function
type Animal {}

type Cat(Animal) {

}

concept BlogCategory {}
concept BlogCategories {}
concept BlogRelatedPosts {}
concept Comments {}

concept Page {}
concept Link {}
concept RichTextPage {}

api /blog {
    import "swagger.yml"
    /create {
        in { title: Blog }
        out { }
        precondition {
            "不为空": not null
       // not_empty: not empty
        }
        postcondition { }
    }
}

// or namespaces ?
space Page {
    concepts: Page, Link, RichTextPage
}

space Blog {
   name: "${name.lower()}_${item.upper()}",
   package: "com.phodal.blog", // or path
   concepts: Blog, BlogCategory, BlogCategories, BlogRelatedPosts, Comments
}


diagram("layer") Sample {

}